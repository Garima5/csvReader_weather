#BlueJ class context
comment0.params=parser
comment0.target=org.apache.commons.csv.CSVRecord\ hottesthour(org.apache.commons.csv.CSVParser)
comment1.params=
comment1.target=void\ tester_hottest()
comment10.params=parser
comment10.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ tester_average_temperature()
comment12.params=parser\ value
comment12.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment13.params=
comment13.target=void\ tester_average_temperature_highHumidity()
comment14.params=
comment14.target=org.apache.commons.csv.CSVRecord\ coldest_in_multiple()
comment15.params=
comment15.target=void\ tester_coldest_many()
comment2.params=
comment2.target=org.apache.commons.csv.CSVRecord\ hottest_in_multiple()
comment3.params=
comment3.target=void\ tester_hottest_many()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ coldesthour(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=void\ tester_coldest()
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.params=
comment7.target=void\ tester_humidity()
comment8.params=
comment8.target=org.apache.commons.csv.CSVRecord\ lowest_humidity_in_multiple()
comment9.params=
comment9.target=void\ tester_humidity_many()
numComments=16
